{"name":"Abada","tagline":"GUI for analyzing nanopore data, based on the Abada package.","body":"# Abada; The PyPore Pipeline\r\n\r\nAbada is a GUI based on the PyPore package, written for the UCSC Nanopore Lab, and made freely available to all for use. It requires the following:\r\n\r\n1. PyPore\r\n2. mySQLdb\r\n3. numpy\r\n4. scipy\r\n5. matplotlib\r\n6. sklearn\r\n7. PyQt4\r\n\r\nInstall links can be found in the README file. \r\n\r\nIt is made up of five primary windows.\r\n\r\n## Chenoo Viewer\r\n\r\nChenoo Viewer is a MySQL database viewer. It uses _mysql and mySQLdb to connect to a MySQL database. You can read, write to, and delete from the database. All tables are read from the database automatically and available to be looked at. Searching is done either by generating a SQL expression from the filled in boxes, or by writing your own queries in the box on the bottom. Deletion and dropping are prohibited from use in the raw SQL box. \r\n\r\n## Analysis Page\r\n\r\nThe next page allows you to specify the files you wish to parse. There is a drop down menu for both the event detector and the segmenter. When either an event detector or a segmenter is chosen, a list of parameters appears which can be modified, generated directly from the parser. Default options are provided as most used options for certain parameters.\r\n\r\nFiltering options for segmentation and viewing are shown under Bessel Filter Options. If you have connected Abada to a database, you can either cache an analysis to it with \"Save Analysis to Database\", or attempt to load the analysis. If you wish to save the analysis to the local drive, you can save it as a JSON which is human readable. If you wish to load from either a JSON or the database, you must have the file which will be parsed in the same folder as Abada (not simply provide the in the table under Filenames). The parameters and file name must match exactly to load a previously cached analysis.\r\n\r\nThere is also an option to only store metadata, which means to not store all of the points in every segment, but to instead save the metadata of the normal distribution which fits the data. This is useful if you are only using mean, standard deviation, and time, from many files, as more memory is used in every file analyzed. All options are available for use if you store only metadata, but the event viewer will represent segments differently.\r\n\r\nLastly, click the \"Analyze\" button when you are satisfied with the analysis you want to perform. The bar will update every time a file is analyzed-- or per event as events are segmented in a file where a segmenter has been chosen. If you wish to output the metadata to a csv file, hit \"output\", which will save the metadata to \"abada_event_data.csv\" and \"abada_segment_data.csv\". This is useful if you wish to use another program to do plotting or analysis, as csv is a very common file extension.\r\n\r\n## Event Viewer\r\n\r\nEvents can be viewed either in black and white, cycle colored, or colored by hmm states. If the event has been segmented, the color cycle will apply the next color to each consecutive segment, making segments easily distinguishable without the need for clunky vertical lines. Coloring by hmm states will color each segment by the color assigned to each hidden state in the hmm, making it easy to see which segment was classified as being a part of which hidden state. If you wish to color the event by an HMM, select the appropriate HMM from the dropdown box next to the HMM Hidden States radio button. \r\n\r\nThe title will give the serial ID of the event, and the time it appears in the trace. Statistics about the event are displayed in the lower right. If you wish to exclude this event from being used downstream, click the \"exclude\" button. This is reversible, and the event will still be visible in the event viewer window.  \r\n\r\n## Analysis Viewer\r\n\r\nThis will allow you to plot basic histograms and scatterplots of the data. You can plot either event statistics, segment statistics or HMM state statistics. Choose both axes and the corresponding plot button. If you wish to color by the sample or the lab, choose the appropriate option in the \"Color By\" dropdown bar. Histograms are generated by clicking \"Count\" on the y-axis, and whatever statistic for the x-axis.\r\n\r\nThe matplotlib toolbar at the bottom of the plot allows you to do things such as zoom in, save the picture, and change the axes, either in scale or from linear to log scale. \r\n\r\n## Alignment Viewer\r\n\r\nThis will attempt to align all of the events individually to a model, given a backslip penalty and a skip penalty. The total score for the multiple alignment is put in both the title and in the lower right hand corner. The identity of this model is extremely important, as a bad model will not align to many of the other events, and produce a terrible alignment. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}